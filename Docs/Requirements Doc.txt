# Commerce Bank Group Project Requirements

## 1. Functional Requirements

### User Management
- Users must be able to register with details such as first name, last name, username, and email.
- Authentication should require email confirmation.
- Support for login and logout functionalities.
- Capability for users to recover and reset their passwords via email.
- Implementation of two-factor authentication.

### Financial Dashboard
- Provide a dashboard displaying a summary of financial activities.
- Show recent transactions and key financial metrics.

### Transaction Management
- Allow users to record, edit, and delete financial transactions including details like date, amount, description, and category.

### Budget Tracking
- Feature a budget tracker that categorizes expenses and visualizes them (e.g., pie charts).
- Enable users to set budget limits for different categories.

### Reports and Notifications
- Send email notifications for important account activities.
- Generate and allow users to view and download financial reports.

## 2. Security Requirements

### Data Protection
- Use HTTPS for all data transmissions.
- Encrypt sensitive data like passwords and personal information.
- Implement AES encryption for sensitive data operations within the application.

### Access Control
- Enforce authentication and authorization on all endpoints.
- Implement role-based access control (RBAC) for user actions.

## 3. Performance Requirements

### Response Time
- Ensure the application pages and user inputs load within 2 seconds under normal conditions.

### Scalability
- Handle a 50% increase in user load without performance degradation.

## 4. Usability Requirements

### User Interface
- Ensure responsiveness and accessibility on various devices including desktops, tablets, and smartphones.
- Maintain intuitive and user-friendly UI with clear navigation and consistent layout.

### Accessibility
- Comply with WCAG 2.1 accessibility standards to accommodate users with disabilities.

## 5. Technical Requirements

### Tech Stack
- Backend developed using ASP.NET Core and Entity Framework Core.
- Frontend using HTML, CSS, Bootstrap, and Blazor.
- PostgreSQL for database management.
- MailKit for handling email functionalities.

### Development Practices
- Use Git for version control with strict pull request and code review policies.
- Implement CI/CD practices for efficient development and deployment processes.

